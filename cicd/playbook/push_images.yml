---
- hosts: build
  vars:
    images:
      - edgexfoundry/sync-app
      - edgexfoundry/device-lora
      - edgexfoundry/device-camera
      - edgexfoundry/shim-security-bootstrapper
      - edgexfoundry/shim-security-secretstore-setup
      - kong-patched
  vars_files:
    - ../../deploy/playbook/group_vars/all/master.yml

  tasks:
    - name: Push amd64 images to registry
      community.docker.docker_image:
        name: "{{ item }}-amd64:latest"
        repository: "{{ registry_name }}/{{ item }}-amd64:latest"
        push: yes
        source: local
        force_tag: yes
      loop: "{{ images }}"
    - name: Push arm64 images to registry
      community.docker.docker_image:
        name: "{{ item }}-arm64:latest"
        repository: "{{ registry_name }}/{{ item }}-arm64:latest"
        push: yes
        source: local
        force_tag: yes
      loop: "{{ images }}"

    - name: Remove existing local multi-architecture manifests
      # In case this play failed earlier
      command:
        cmd: "docker manifest rm {{ registry_name }}/{{ item }}"
      ignore_errors: yes
      loop: "{{ images }}"
    - name: Create multi-architecture manifest for images
      # FIXME: This will update the manifests every time the script runs
      # whether there is a real change or not.
      command:
        cmd: "docker manifest create {{ registry_name }}/{{ item }} {{ registry_name }}/{{ item }}-amd64 {{ registry_name }}/{{ item }}-arm64"
      loop: "{{ images }}"
    - name: Push multi-architecture manifests for images
      command:
        cmd: "docker manifest push {{ registry_name }}/{{ item }}"
      loop: "{{ images }}"
    - name: Remove local multi-architecture manifests for images
      command:
        cmd: "docker manifest rm {{ registry_name }}/{{ item }}"
      loop: "{{ images }}"

    # Currently, image-app based on l4t-base:r32.6.1 only supports arm architecture, 
    # so the uploading of image and the creation of manifest are separated from the existing services.
    - name: Push image-app arm64 image to registry
      community.docker.docker_image:
        name: "edgexfoundry/image-app-arm64:latest"
        repository: "{{ registry_name }}/edgexfoundry/image-app-arm64:latest"
        push: yes
        source: local
        force_tag: yes
    - name: Remove existing local image-app multi-architecture manifest
      # In case this play failed earlier
      command:
        cmd: "docker manifest rm {{ registry_name }}/edgexfoundry/image-app:latest"
      ignore_errors: yes
    - name: Create image-app multi-architecture manifest
      # FIXME: This will update the manifests every time the script runs
      # whether there is a real change or not.
      command:
        cmd: "docker manifest create {{ registry_name }}/edgexfoundry/image-app:latest {{ registry_name }}/edgexfoundry/image-app-arm64:latest"
    - name: Push image-app multi-architecture manifest
      command:
        cmd: "docker manifest push {{ registry_name }}/edgexfoundry/image-app:latest"
    - name: Remove local image-app multi-architecture manifest
      command:
        cmd: "docker manifest rm {{ registry_name }}/edgexfoundry/image-app:latest"
